package com.ffcs.crmd.cas.base.context;

import org.apache.log4j.Logger;

import com.ctg.itrdc.platform.common.utils.type.NumberUtils;
import com.ctg.itrdc.platform.common.utils.type.StringUtils;
import com.ctg.itrdc.platform.pub.context.SessionContext;
import com.ffcs.crmd.cas.base.api.LoginDTO;
import com.ffcs.crmd.cas.constants.CasConstant;

/**
 * 功能说明:Session操作上下文
 *
 * @author Luxb
 * @Date 2016年2月17日 下午2:57:56
 * <p/>
 * <p/>
 * 版本号  |   作者   |  修改时间   |   修改内容
 */
public final class CasSessionContext extends SessionContext {
    private static Logger logger = Logger.getLogger(CasSessionContext.class);

    /**
     * .
     */
    private CasSessionContext() {

    }

    public static Long getStaffId() {
        if(SessionContext.getSession() != null){
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null && !StringUtils.isNullOrEmpty(loginDTO.getStaffId())){
                return NumberUtils.toLong(loginDTO.getStaffId());
            }
        }
        return 49822L;
    }

    public static Long getAreaId() {
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null && !StringUtils.isNullOrEmpty(loginDTO.getAreaId())) {
                return NumberUtils.toLong(loginDTO.getAreaId());
            }
        }
        return 2L;
    }

    public static Long getRegionCd() {
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null && !StringUtils.isNullOrEmpty(loginDTO.getRegionCd())) {
                return NumberUtils.toLong(loginDTO.getRegionCd());
            }
        }
        return 11L;
    }

    public static Long getStaffPositionId() {
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null && !StringUtils.isNullOrEmpty(loginDTO.getStaffPositionId())) {
                return NumberUtils.toLong(loginDTO.getStaffPositionId());
            }
        }
        return 2280199L;
    }

    public static Long getOrgId() {
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null && !StringUtils.isNullOrEmpty(loginDTO.getOrgId())) {
                return NumberUtils.toLong(loginDTO.getOrgId());
            }
        }
        return 50043L;
    }

    /**
     * 团队名称
     */
    public static String getOrgName() {
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null) {
                return loginDTO.getOrgName();
            }
        }
        return "东街营业厅";
    }

    /**
     * 区域名称
     */
    public static String getRegionName() {
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null) {
                return loginDTO.getRegionName();
            }
        }
        return "福州市";
    }

    /**
     * 渠道编码
     * channelCode
     */
    public static String getChannelCode(){
        if(SessionContext.getSession() != null) {
            LoginDTO loginDTO =
                    (LoginDTO) SessionContext.getSession()
                            .getAttribute(CasConstant.CAS_LOGIN_INFO.getValue());
            if (loginDTO != null) {
                return loginDTO.getChannelCode();
            }
        }
        return "";
    }
}